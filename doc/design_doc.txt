Filezoo Design Document
-----------------------

The Filezoo application is a zoomable file manager.

On a high level, it consists of the following parts:
  * Filesystem model
    - A thread-safe model with in-progress updates of recursive traversal info
    - Monitor filesystem for changes
    - Invalidate and rebuild changed parts of the tree
  * Renderer
    - Draw the filesystem model on screen
  * User interface
    - Control renderer based on user input
    - Guide filesystem traversal

The dataflow between these parts is:

   Model -> Renderer -> User -> User interface
     ^_________^______________________|


Clean conceptual models aside, this is the overview of the current program:

  * DirCache -- the filesystem [recursive traversal] model
    - thread-safe directories-only model of the filesystem
    - does multi-threaded recursive traversal with in-progress updates through
      shared object references
    - all edits to the model are serialized through the DirCache static class
    - uses paths as keys to the model
    - can be told to start a recursive traversal of a path
    - can be told to stop all traversals in progress
    - can be told to invalidate a path's cache entry

  * DirStats -- the filesystem [drawing and navigation] model and renderer part
    - a model of a filesystem path
    - draws itself on a Cairo context
    - draws its children too, if there are any and if they should be visible
    - creates its list of child DirStats dynamically when needed
      - uses GetDirectoryEntries
      - happens in the rendering loop (ARGH BAD)
    - stats the related path on creation
      - happens in the rendering loop (ARGH DOUBLE-BAD)
    - sorts and resizes its children before drawing them
      - happens in the rendering loop (ARGH TRIPLE-BAD)
    - handles clicks to itself in the same recursive drawing manner
      - returns an action object based on click target size and type
        (should rather return the target itself, along with its size)
    - requests filesystem traversal based on whether its measurer uses totals
      (a measurer measures how large the DirStats should be drawn in relation
      to its siblings)
    - the messiest class of them all

  * Filezoo -- the user interface and renderer, a Gtk DrawingArea
    - sets up the DirStats root model for the current directory
    - cancels traversals on changing current directory
    - sets up a watcher to watch changes to the current directory, and informs
      DirCache about them at the start of a drawing frame (not too hot an idea
      as invalidation needs to acquire a lock to the cache _and_ does filesystem
      operations)
    - draws the toolbars
    - handles executing click actions
    - handles all them events and redraws
    - sets up the zoom and pan, translates and scales accordingly before drawing
      the DirStats
